# Generated by Django 3.2.13 on 2022-09-06 16:56

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('anvil_consortium_manager', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConsentGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('consent', models.CharField(max_length=255, unique=True)),
                ('data_use_limitations', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ResearchCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=15, unique=True)),
                ('full_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UploadWorkspace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('consent_group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gregor_anvil.consentgroup')),
                ('research_center', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='gregor_anvil.researchcenter')),
                ('workspace', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='anvil_consortium_manager.workspace')),
            ],
        ),
        migrations.AddConstraint(
            model_name='uploadworkspace',
            constraint=models.UniqueConstraint(fields=('research_center', 'consent_group', 'version'), name='unique_workspace_data'),
        ),
        migrations.AddConstraint(
            model_name='uploadworkspace',
            constraint=models.CheckConstraint(condition=models.Q(('version__gt', 0)), name='positive_version'),
        ),
    ]
