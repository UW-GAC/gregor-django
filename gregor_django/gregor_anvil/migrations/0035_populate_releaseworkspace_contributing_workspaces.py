# Generated by Django 4.2.23 on 2025-08-18 21:00

from django.db import migrations


def populate_contributing_workspaces(apps, schema_editor):
    ReleaseWorkspace = apps.get_model("gregor_anvil", "ReleaseWorkspace")
    # These models are needed to populate contributing_workspaces.
    UploadWorkspace = apps.get_model("gregor_anvil", "UploadWorkspace")
    DCCProcessedDataWorkspace = apps.get_model("gregor_anvil", "DCCProcessedDataWorkspace")
    # Create one ReleaseWorkspace for each unique version.
    for row in ReleaseWorkspace.objects.all():
        # Upload workspaces.
        upload_workspaces = UploadWorkspace.objects.filter(
            upload_cycle=row.upload_cycle,
            consent_group=row.consent_group,
        )
        for upload_workspace in upload_workspaces:
            # Add the upload workspace to the contributing workspaces.
            row.contributing_workspaces.add(upload_workspace.workspace)
        # DCC processed data workspaces.
        dcc_workspaces = DCCProcessedDataWorkspace.objects.filter(
            upload_cycle=row.upload_cycle,
            consent_group=row.consent_group,
        )
        for dcc_workspace in dcc_workspaces:
            # Add the DCC processed data workspace to the contributing workspaces.
            row.contributing_workspaces.add(dcc_workspace.workspace)


class Migration(migrations.Migration):

    dependencies = [
        ('gregor_anvil', '0034_releaseworkspace_contributing_workspaces'),
    ]

    operations = [
        migrations.RunPython(populate_contributing_workspaces, reverse_code=migrations.RunPython.noop),
    ]
